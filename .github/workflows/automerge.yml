
name: Merge feature-develop into main and Notify Authors

on: 
  push:
    branches:
      - feature-develop
  issues:
  pull_request:
    

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  merge-and-notify:
    runs-on: ubuntu-latest

    outputs:
      conflict_detected: ${{ steps.step1.outputs.conflict_detected }}
      conflict_author: ${{ steps.step1.outputs.conflict_author }}
      conflict_messages: ${{ steps.step1.outputs.conflict_messages }}
      
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Attempt to merge merge-test into merge-master
        id: merge_result
        run: |
          set -e
          git merge feature-develop --no-ff --no-edit --allow-unrelated-histories || echo "Merge failed"

      - name: Check merge result
        id: step1
        run: |
          if [ "${{ steps.merge_result.outcome }}" == "success" ]; then
          #   git push origin main
          # else
            # Notify the author of the merge conflict and provide instructions
            commit_author=$(git --no-pager show -s --format='%an' HEAD)
            commit_author_email=$(git --no-pager show -s --format='%ae' HEAD)
            echo "$commit_author"
            echo "Merge conflict detected in the branch 'merge-test'. Please resolve the conflict and rebase if necessary. Instructions: [Link to conflict resolution guide]. /cc @$commit_author" >> conflict_message.txt
            echo "conflict_detected=true" >> $GITHUB_OUTPUT
            echo "conflict_messages=$(cat conflict_message.txt)" >> $GITHUB_OUTPUT
            echo "conflict_author=$commit_author" >> $GITHUB_OUTPUT
          fi
                
      # - name: Set environment variables
      #   id: init
      #   # if: steps.merge-and-notify.outputs.CONFLICT_DETECTED == 'true'
      #   run: |
      #     echo "CONFLICT_DETECTED=true" >> $GITHUB_ENV
      #     echo "CONFLICT_AUTHOR=$commit_author" >> $GITHUB_ENV

  create_pr:
    runs-on: ubuntu-latest
    needs: merge-and-notify
    #if: needs.merge-and-notify.outputs.CONFLICT_DETECTED == 'true'

    steps:
      - name: git checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Display Conflict Message
        if: needs.merge-and-notify.outputs.conflict_detected == 'true'
        run: |
          echo "Conflict Detected by: ${{ needs.merge-and-notify.outputs.conflict_author }}"
          echo "Message: ${{ needs.merge-and-notify.outputs.conflict_messages }}"

      #https://github.com/marketplace/actions/github-pull-request-action
      - name: create pull request
        if: needs.merge-and-notify.outputs.conflict_detected == 'true'
        id: open-pr
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          destination_branch: ${{ github.event.repository.default_branch }}
          pr_title: "[Automated] Merge ${{ github.ref_name }} into ${{ github.event.repository.default_branch }}"
          pr_body: "Automated Pull Request"
          #pr_reviewer: "${{ env.CONFLICT_AUTHOR }}"
          #pr_assignee: "${{ needs.merge-and-notify.outputs.conflict_author }}"

      - uses: wow-actions/auto-assign@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          assignees: ${{ needs.merge-and-notify.outputs.conflict_author }}
          