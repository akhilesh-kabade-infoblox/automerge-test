name: Create PR and Handle Conflicts

on:
  push:
    branches:
      - main

jobs:
  create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create PR
        run: |
          git checkout -b pr-branch
          git pull
          git push origin pr-branch
          gh pr create -b develop -h pr-branch -m "Automated PR from master to develop"

  merge_pr:
    needs: create_pr
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Merge PR if no conflicts
        run: |
          git checkout develop
          git pull origin develop
          git merge --no-ff pr-branch || exit 0

  handle_conflicts:
    needs: create_pr
    if: failure()
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Get conflicting files
        id: conflict_files
        run: |
          git checkout -b pr-branch
          git push origin pr-branch
          conflicts=$(git merge develop --no-ff --no-commit 2>&1 | grep 'CONFLICT' | sed -e 's/.*CONFLICT[[:space:]]*\([^ ]*.*\)/\1/')

      - name: Assign PR to conflicting files author
        run: |
          for file in ${{ steps.conflict_files.outputs.conflicts }}; do
            author=$(git blame --show-email $file | grep -m1 -oP '(?<=<).+?(?=>)')
            gh pr edit ${{ github.event.number }} --add-assignees $author
          done
